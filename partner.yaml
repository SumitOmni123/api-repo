swagger: '2.0'
info:
  description: APIs related to partners , products and product partnership
  version: v1.0.0
  title: Partner management APIs
  termsOfService: Terms of service
  contact:
    name: Destry
  license:
    name: License of API
host: localhost:8080
basePath: /
tags:
  - name: omni-partner-controller
    description: Omni Partner Controller
  - name: omni-partner-product-controller
    description: Omni Partner Product Controller
  - name: omni-product-type-controller
    description: Omni Product Type Controller
  - name: open-api-web-mvc-resource
    description: Open Api Web Mvc Resource
  - name: product-configuration-controller
    description: Product Configuration Controller
  - name: product-partnership-controller
    description: Product Partnership Controller
  - name: swagger-config-resource
    description: Swagger Config Resource
paths:
  /partner/product/v1/create:
    post:
      tags:
        - omni-partner-product-controller
      summary: createOrUpdateProductPartner
      operationId: createOrUpdateProductPartnerUsingPOST
      consumes:
        - application/json
      produces:
        - /
      parameters:
        - in: body
          name: productPartnerRequest
          description: productPartnerRequest
          required: true
          schema:
            $ref: '#/definitions/OmniPartnerProductMasterRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OmniPartnerProductMasterDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /partner/product/v1/delete:
    delete:
      tags:
        - omni-partner-product-controller
      summary: deletePartnerProduct
      operationId: deletePartnerProductUsingDELETE
      produces:
        - /
      parameters:
        - name: partnerProductId
          in: query
          description: partnerProductId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OmniPartnerProductMasterDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /partner/product/v1/partnershipId:
    get:
      tags:
        - omni-partner-product-controller
      summary: getProductPartnershipById
      operationId: getProductPartnershipByIdUsingGET
      produces:
        - /
      parameters:
        - name: partnershipId
          in: query
          description: partnershipId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OmniPartnerProductMasterDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /partner/v1/create:
    post:
      tags:
        - omni-partner-controller
      summary: createOrUpdatePartner
      operationId: createOrUpdatePartnerUsingPOST
      consumes:
        - application/json
      produces:
        - /
      parameters:
        - in: body
          name: partnerRequest
          description: partnerRequest
          required: true
          schema:
            $ref: '#/definitions/OmniPartnerRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OmniPartnerDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /partner/v1/delete:
    delete:
      tags:
        - omni-partner-controller
      summary: deletePartner
      operationId: deletePartnerUsingDELETE
      produces:
        - /
      parameters:
        - name: partnerId
          in: query
          description: partnerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OmniPartnerDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /partner/v1/partnerId:
    get:
      tags:
        - omni-partner-controller
      summary: getPartnerById
      operationId: getPartnerByIdUsingGET
      produces:
        - /
      parameters:
        - name: partnerId
          in: query
          description: partnerId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OmniPartnerDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /partnership/v1/create:
    post:
      tags:
        - product-partnership-controller
      summary: createOrUpdatePartnership
      operationId: createOrUpdatePartnershipUsingPOST
      consumes:
        - application/json
      produces:
        - /
      parameters:
        - in: body
          name: partnershipRequest
          description: partnershipRequest
          required: true
          schema:
            $ref: '#/definitions/PartnerProductPartnershipRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PartnerProductPartnershipDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /partnership/v1/delete:
    delete:
      tags:
        - product-partnership-controller
      summary: deletePartnershipById
      operationId: deletePartnershipByIdUsingDELETE
      produces:
        - /
      parameters:
        - name: partnershipId
          in: query
          description: partnershipId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PartnerProductPartnershipDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /partnership/v1/originatorId:
    get:
      tags:
        - product-partnership-controller
      summary: getAllPartnershipByOriginatorId
      operationId: getAllPartnershipByOriginatorIdUsingGET
      produces:
        - /
      parameters:
        - name: originatorId
          in: query
          description: originatorId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/PartnerProductPartnershipDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /partnership/v1/partnershipId:
    get:
      tags:
        - product-partnership-controller
      summary: getPartnershipById
      operationId: getPartnershipByIdUsingGET
      produces:
        - /
      parameters:
        - name: partnershipId
          in: query
          description: partnershipId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/PartnerProductPartnershipDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /partnership/v1/policies/originatorId:
    get:
      tags:
        - product-partnership-controller
      summary: getAllPartnershipPoliciesByOriginatorId
      operationId: getAllPartnershipPoliciesByOriginatorIdUsingGET
      produces:
        - /
      parameters:
        - name: originatorId
          in: query
          description: originatorId
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              type: integer
              format: int64
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /product/configuration/getConfigByPartnership:
    get:
      tags:
        - product-configuration-controller
      summary: getConfigIdFromPartnership
      operationId: getConfigIdFromPartnershipUsingGET
      produces:
        - /
      parameters:
        - in: body
          name: configForPartnershipRequest
          description: configForPartnershipRequest
          required: true
          schema:
            $ref: '#/definitions/ConfigForPartnershipRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConfigResponseBody'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /product/configuration/getConfigIdByProductId:
    get:
      tags:
        - product-configuration-controller
      summary: getConfigIdFromProductIdAndConfigType
      operationId: getConfigIdFromProductIdAndConfigTypeUsingGET
      produces:
        - /
      parameters:
        - name: configType
          in: query
          description: configType
          required: false
          type: string
          enum:
            - BRE
            - LMS
            - VALIDATION_SCHEMA
        - name: productId
          in: query
          description: productId
          required: true
          type: string
          format: uuid
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ConfigResponseBody'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /productType/v1/create:
    post:
      tags:
        - omni-product-type-controller
      summary: createOrUpdateProductType
      operationId: createOrUpdateProductTypeUsingPOST
      consumes:
        - application/json
      produces:
        - /
      parameters:
        - in: body
          name: omniProductTypeRequest
          description: omniProductTypeRequest
          required: true
          schema:
            $ref: '#/definitions/OmniProductTypeRequest'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OmniProductTypeDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /productType/v1/delete:
    delete:
      tags:
        - omni-product-type-controller
      summary: deletePartner
      operationId: deletePartnerUsingDELETE_1
      produces:
        - /
      parameters:
        - name: productTypeID
          in: query
          description: productTypeID
          required: true
          type: integer
          format: int64
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/OmniProductTypeDto'
        '204':
          description: No Content
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
  /v3/api-docs:
    get:
      tags:
        - open-api-web-mvc-resource
      summary: openapiJson
      operationId: openapiJsonUsingGET
      produces:
        - application/json
      parameters:
        - name: apiDocsUrl
          in: query
          description: apiDocsUrl
          required: false
          type: string
        - name: country
          in: query
          required: false
          type: string
        - name: displayCountry
          in: query
          required: false
          type: string
        - name: displayLanguage
          in: query
          required: false
          type: string
        - name: displayName
          in: query
          required: false
          type: string
        - name: displayScript
          in: query
          required: false
          type: string
        - name: displayVariant
          in: query
          required: false
          type: string
        - name: extensionKeys
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: ISO3Country
          in: query
          required: false
          type: string
        - name: ISO3Language
          in: query
          required: false
          type: string
        - name: language
          in: query
          required: false
          type: string
        - name: script
          in: query
          required: false
          type: string
        - name: unicodeLocaleAttributes
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: unicodeLocaleKeys
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: variant
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v3/api-docs.yaml:
    get:
      tags:
        - open-api-web-mvc-resource
      summary: openapiYaml
      operationId: openapiYamlUsingGET
      produces:
        - application/vnd.oai.openapi
      parameters:
        - name: apiDocsUrl
          in: query
          description: apiDocsUrl
          required: false
          type: string
        - name: country
          in: query
          required: false
          type: string
        - name: displayCountry
          in: query
          required: false
          type: string
        - name: displayLanguage
          in: query
          required: false
          type: string
        - name: displayName
          in: query
          required: false
          type: string
        - name: displayScript
          in: query
          required: false
          type: string
        - name: displayVariant
          in: query
          required: false
          type: string
        - name: extensionKeys
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: ISO3Country
          in: query
          required: false
          type: string
        - name: ISO3Language
          in: query
          required: false
          type: string
        - name: language
          in: query
          required: false
          type: string
        - name: script
          in: query
          required: false
          type: string
        - name: unicodeLocaleAttributes
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: unicodeLocaleKeys
          in: query
          required: false
          type: array
          items:
            type: string
          collectionFormat: multi
        - name: variant
          in: query
          required: false
          type: string
      responses:
        '200':
          description: OK
          schema:
            type: string
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
  /v3/api-docs/swagger-config:
    get:
      tags:
        - swagger-config-resource
      summary: openapiJson
      operationId: openapiJsonUsingGET_1
      produces:
        - application/json
      responses:
        '200':
          description: OK
          schema:
            type: object
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found
definitions:
  ConfigDetails:
    type: object
    properties:
      configId:
        type: string
      configType:
        type: string
        enum:
          - BRE
          - LMS
          - VALIDATION_SCHEMA
    title: ConfigDetails
  ConfigForPartnershipRequest:
    type: object
    properties:
      lenderId:
        type: integer
        format: int64
      lenderProductId:
        type: string
        format: uuid
      originatorId:
        type: integer
        format: int64
      originatorProductId:
        type: string
        format: uuid
      partnershipProductId:
        type: string
        format: uuid
    title: ConfigForPartnershipRequest
  ConfigResponseBody:
    type: object
    properties:
      configDetails:
        type: array
        items:
          $ref: '#/definitions/ConfigDetails'
    title: ConfigResponseBody
  OmniPartnerDto:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      createdBy:
        type: string
      partnerId:
        type: integer
        format: int64
      partnerKey:
        type: string
      partnerName:
        type: string
      partnerType:
        type: string
        enum:
          - LENDER
          - OL
          - ORIGINATOR
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        type: string
    title: OmniPartnerDto
  OmniPartnerProductMasterDto:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      createdBy:
        type: string
      omniProductType:
        type: integer
        format: int64
      partnerId:
        type: integer
        format: int64
      partnerProductId:
        type: string
        format: uuid
      partnerProductName:
        type: string
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        type: string
    title: OmniPartnerProductMasterDto
  OmniPartnerProductMasterRequest:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      createdBy:
        type: string
      omniProductType:
        type: integer
        format: int64
      partnerId:
        type: integer
        format: int64
      partnerProductId:
        type: string
        format: uuid
      partnerProductName:
        type: string
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        type: string
    title: OmniPartnerProductMasterRequest
  OmniPartnerRequest:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      createdBy:
        type: string
      partnerId:
        type: integer
        format: int64
      partnerKey:
        type: string
      partnerName:
        type: string
      partnerType:
        type: string
        enum:
          - LENDER
          - OL
          - ORIGINATOR
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        type: string
    title: OmniPartnerRequest
  OmniProductTypeDto:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      createdBy:
        type: string
      productTypeId:
        type: integer
        format: int64
      productTypeName:
        type: string
        enum:
          - BUSINESS
          - CASHFLOW
          - HOME
          - PERSONAL
          - VEHICLE
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        type: string
    title: OmniProductTypeDto
  OmniProductTypeRequest:
    type: object
    properties:
      createdAt:
        type: string
        format: date-time
      createdBy:
        type: string
      productTypeId:
        type: integer
        format: int64
      productTypeName:
        type: string
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        type: string
    title: OmniProductTypeRequest
  PartnerProductPartnershipDto:
    type: object
    properties:
      autoEnabledConfig:
        type: boolean
      createdAt:
        type: string
        format: date-time
      createdBy:
        type: string
      lenderId:
        type: integer
        format: int64
      lenderProductId:
        type: string
        format: uuid
      originatorId:
        type: integer
        format: int64
      originatorProductId:
        type: string
        format: uuid
      partnershipProductId:
        type: string
        format: uuid
      partnershipProductName:
        type: string
      policyId:
        type: integer
        format: int64
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        type: string
    title: PartnerProductPartnershipDto
  PartnerProductPartnershipRequest:
    type: object
    properties:
      autoEnabledConfig:
        type: boolean
      createdAt:
        type: string
        format: date-time
      createdBy:
        type: string
      lenderId:
        type: integer
        format: int64
      lenderProductId:
        type: string
        format: uuid
      originatorId:
        type: integer
        format: int64
      originatorProductId:
        type: string
        format: uuid
      partnershipProductId:
        type: string
        format: uuid
      partnershipProductName:
        type: string
      policyId:
        type: integer
        format: int64
      updatedAt:
        type: string
        format: date-time
      updatedBy:
        type: string
    title: PartnerProductPartnershipRequest
